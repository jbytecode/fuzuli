#
# fuzuli : A general purpose interpreter
# Copyright (C) 2012 Mehmet Hakan Satman <mhsatman@yahoo.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.


(require "/usr/lib/fuzuli/nfl/string.nfl")

(let str " Fuzuli ")
(let passed "PASSED!\n")
(let error "ERROR\n")

(let result1 (ltrim str))
(if (= result1 "Fuzuli ")
	(print passed)
	(print error)
)

(let result2 (rtrim str))
(if (= result2 " Fuzuli")
	(print passed)
	(print error)
)

(let result3 (trim str))
(if (= result3 "Fuzuli")
	(print passed)
	(print error)
)

(let result4 (left str 4))
(if (= result4 " Fuz")
	(print passed)
	(print error)
)

(let result5 (right str 4))
(if (= result5 "uli ")
	(print passed)
	(print error)
)

(let result6 (strcat (list str "***")))
(if (= result6 " Fuzuli ***")
	(print passed)
	(print error)
)

(let result7 (substr str 2 4))
(if (= result7 "uz")
	(print passed)
	(print error)
)


(let result8 (strreverse str))
(if (= result8 " iluzuF ")
	(print passed)
	(print error)
)

(let result9 (strlen str))
(if (= result9 8)
	(print passed)
	(print error)
)

(let result10 (ucase str))
(if (= result10 " FUZULI ")
	(print passed)
	(print error)
)

(let result11 (lcase str))
(if (= result11 " fuzuli ")
	(print passed)
	(print error)
)

(let result12 (instr "Fuzuli" "uzu"))
(if (= result12 1)
	(print passed)
	(print error)
)

(let result13 (chr 65))
(if (= result13 "A")
	(print passed)
	(print error)
)


(let result14 (ord "A"))
(if (= result14 65)
	(print passed)
	(print error)
)

(let result15 (md5 "fuzuli"))
(if (= result15 "ac7f77c9a8a84e110342dd8117b54af1")
	(print passed)
	(print error)
)

(let result16 (urldecode "/?name=a%20b+c"))
(if (= result16 "/?name=a b c")
	(print passed)
	(print error)
)

(let result17 (levenshtein "fuzuli" "the fuzuli project"))
(if (= result17 12)
	(print passed)
	(print error)
)

(let result18 (str_replace "Programming with fuzuli is fun!" "fuzuli" "Fuzuli Programming Language"))
(if (= result18 "Programming with Fuzuli Programming Language is fun!")
	(print passed)
	(print error)
)


(let result19 (str_shuffle "fuzuli"))
(if (= result19 "uzlifu")
	(print passed)
	(print error)
)

(let result20 (isdigit "1"))
(if (= result20 1)
	(print passed)
	(print error)
)

(let result21 (isalpha "A"))
(if (= result21 1)
    (print passed)
    (print error)
)

(let result22 (isalnum "="))
(if (= result22 0)
    (print passed)
    (print error)
)

(let result23 (isupper "A"))
(if (= result23 1)
    (print passed)
    (print error)
)

(let result24 (islower "a"))
(if (= result24 1)
    (print passed)
    (print error)
)

(let result25 (iscntrl "a"))
(if (= result25 0)
    (print passed)
    (print error)
)


(let result26 (isgraph "a"))
(if (= result26 1)
    (print passed)
    (print error)
)

(let result27 (isprint "a"))
(if (= result27 1)
    (print passed)
    (print error)
)

(let result28 (ispunct ":"))
(if (= result28 1)
    (print passed)
    (print error)
)

(let result29 (isspace "k"))
(if (= result29 0)
    (print passed)
    (print error)
)



