(let passed "PASSED")
(let error "ERROR")

(let mylist (list 1 2 3 4 5 6 7 8 9 10))

# test 1
(if (= (length mylist) 10) 
	(println passed) 	
	(println error)
)


# test 2
(append mylist 11)
(if (= (length mylist) 11) 
	(println passed) 	
	(println error)
)

# test 3
(prepend mylist 0)
(if (= (length mylist) 12) 
	(println passed) 	
	(println error)
)


# test 4
(if (= (nth mylist 0) 0) 
	(println passed) 	
	(println error)
)


# test 5
(if (= (nth mylist 11) 11) 
	(println passed) 	
	(println error)
)


# test 6 -    2-Dimensional lists
(let mylist (list (list 1 2 3) (list 4 5 6) (list 7 8 9)))
(if (= 3 (nth (nth mylist 0) 2))
	(println passed)
	(println error)
)
# test 7 
(if (= 8 (nth (nth mylist 2) 1))
	(println passed)
	(println error)
)



